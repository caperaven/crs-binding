function t(t,e){const i=`_${e}`;return null!=t[i]?t[i]:crsbinding.data.getValue(t._dataId,e)}class e{get title(){return this.getProperty("title")}set title(t){this.setProperty("title",t)}get element(){return this._element}set element(t){this._element=t}constructor(t){this._dataId=crsbinding.data.addObject(this.constructor.name),crsbinding.data.addContext(this._dataId,this),this.element=t}async connectedCallback(){if(null!=this.preLoad){const t=(t,e)=>{crsbinding.data.setProperty(this._dataId,t,e)};await this.preLoad(t)}crsbinding.parsers.parseElement(this.element,this._dataId),this.load()}async disconnectedCallback(){crsbinding.observation.releaseBinding(this.element),crsbinding.utils.disposeProperties(this),this.element=null,crsbinding.data.removeObject(this._dataId)}getProperty(e){return t(this,e)}setProperty(e,i){!function(e,i,a){let n;a&&null!=a.__uid&&(n=t(e,i),n&&crsbinding.data.unlinkArrayItem(n)),crsbinding.data.setProperty(e._dataId,i,a),Array.isArray(a)&&(e[`_${i}`]=crsbinding.data.array(e._dataId,i)),a&&a.__uid&&crsbinding.data.linkToArrayItem(e._dataId,i,a.__uid)}(this,e,i)}load(){this._element.style.visibility="",this._loaded=!0}}export{e as ViewBase};
