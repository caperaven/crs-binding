class ${static run(t,n,e,a,i){return new Promise(async(u,r)=>{n=JSON.parse(JSON.stringify(n)),n.data=n.data||{},n.context=t,n.functions={},n.text=a,n.expCache={},y(i,n),n.bindable==!0&&(crs.intent.binding==null&&await crs.modules.get("binding"),await crs.intent.binding.create_context(null,t,n,null)),await crsbinding.events.emitter.emit("process-starting",n),crsbinding.idleTaskManager.add(async()=>{let f;await m(t,n,e).catch(d=>{n.aborted=!0,r({process:n.name,step:n.currentStep,error:d})}),await this.runStep(n.steps.start,t,n,e).then(async()=>{f=n.result,await this.cleanProcess(n)}).then(()=>u(f)).catch(d=>{n.aborted=!0,r({process:n.name,step:n.currentStep,error:d})})})})}static async runStep(t,n=null,e=null,a=null){if(t==null)return;await g("binding_before",t,n,e,a);let i;if(t.type!=null&&(crs.intent[t.type]==null&&await crs.modules.get(t.type),i=await crs.intent[t.type].perform(t,n,e,a)),t.args?.log!=null){const u=await this.getValue(t.args.log,n,e,a);console.log(u)}if(await g("binding_after",t,n,e,a),e?.aborted!==!0&&t.aborted!==!0){const u=e?.steps?.[t.alt_next_step||t.next_step];if(e!=null&&(e.currentStep=t.next_step),u!=null)return await this.runStep(u,n,e,a)}return i}static async getValue(t,n=null,e=null,a=null){if(typeof t!="string"||t.indexOf("${")==0)return t;if(t=="$context")return n;if(t=="$process")return e;if(t=="$item")return a;if(t.indexOf("$")==-1)return t;if(t.indexOf("$binding")!=-1)return crsbinding.data.getValue(e.parameters.bId,t.replace("$binding.",""));if(t.indexOf("$fn")!=-1&&(t=t.split("$fn").join("")),t=e?.expCache==null?t:c(t,e),t.indexOf("rgb(")!=-1)return t;let i=e?.functions?.[t];if(i==null){const u=t.split("$").join("");i=new Function("context","process","item",`return ${u};`),e!=null&&e.functions!=null&&(e.functions[t]=i)}return i(n,e,a)}static async setValue(t,n,e,a,i){let u;if(t=a?.expCache==null?t:c(t,a),t.indexOf("$binding")!=-1){const f=a.parameters?.bId,d=t.split(".")[1];return crsbinding.data.setProperty(f,d,n)}t.indexOf("$item")!=-1?(u=i,t=t.replace("$item.","")):t.indexOf("$process")!=-1?(u=a,t=t.replace("$process.","")):(u=e,t=t.replace("$context.",""));let r=u;if(t.indexOf(".")==-1)r[t]=await this.getValue(n,e,a,i);else{const f=t.split(".");for(let d=0;d<f.length-1;d++){const b=f[d];r=r[b]=r[b]||{}}n=await this.getValue(n,e,a,i),r[f[f.length-1]]=n}}static async cleanProcess(t){t.bindable==!0&&crsbinding.data.removeObject(t.parameters.bId),await this.cleanObject(t.data),await this.cleanObject(t.functions),delete t.context,delete t.functions,delete t.parameters,delete t.result,delete t.data,delete t.steps,delete t.text,delete t.prefixes,delete t.expCache,await crsbinding.events.emitter.emit("process-ended",t)}static async cleanObject(t){if(t==null)return;const n=Object.keys(t);for(let e of n)delete t[e];return null}}async function g(l,t,n,e,a){crs.intent.binding==null&&await crs.modules.get("binding");const i=t[l];if(i==null||e.parameters?.bId==null)return;const u=Object.keys(i);for(let r of u)await crs.intent.binding.set_property({args:{property:r,value:i[r]}},n,e,a)}async function m(l,t,n){if(t.parameters_def==null)return;t.parameters=t.parameters||{};let e=!0;for(const[a,i]of Object.entries(t.parameters_def))if(i.required===!0&&(t.parameters[a]==null&&i.default!=null&&(t.parameters[a]=await crs.process.getValue(i.default,l,t,n)),e=t.parameters[a]!=null),e===!1)throw t.aborted=!0,t.currentStep="validate process parameters",new Error(`required parameter "${a}" not set or is null`)}function y(l,t){t.prefixes=t.prefixes||{},l!=null&&Object.assign(t.prefixes,l),t.prefixes.$text="$process.text",t.prefixes.$data="$process.data",t.prefixes.$parameters="$process.parameters",t.prefixes.$bId="$process.parameters.bId",t.prefixes.$global="globalThis"}function c(l,t){if(t==null)return l;if(t.expCache[l]!=null)return t.expCache[l];const n=l,e=l.split(".")[0];return t?.prefixes[e]==null||(l=l.split(e).join(t.prefixes[e]),t.expCache[n]=l),l}export{$ as ProcessRunner};
