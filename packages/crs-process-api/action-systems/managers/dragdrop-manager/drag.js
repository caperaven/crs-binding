import{scrollX as a}from "./scroll.js";import{inArea as o}from "./drag-utils.js";async function h(s, t){const i=await crs.call("dom_interactive","get_animation_layer"),e=await n[t.drag.clone](s,t);return e.style.translate=`${s._bounds.x}px ${s._bounds.y}px`,e.style.filter="drop-shadow(0 0 5px #00000080)",i.appendChild(e),e}class n{static async element(t){return t}static async template(t, i){let e=i.drag.template;e==null&&(e=document.querySelector(`#${t.dataset.template}`));const l=e.content.cloneNode(!0).children[0];return l._bounds=t._bounds,l._dragElement=t,l}}async function u(s){if(this._updateDragHandler==null)return;const t=this._dragElement._bounds.x+(this._movePoint.x-this._startPoint.x),i=this._dragElement._bounds.y+(this._movePoint.y-this._startPoint.y);this._dragElement.style.translate=`${t}px ${i}px`,this._scrollAreas!=null&&(o(this._movePoint.x,this._movePoint.y,this._scrollAreas.left)?await a.call(this,s,-1):o(this._movePoint.x,this._movePoint.y,this._scrollAreas.right)?await a.call(this,s,1):o(this._movePoint.x,this._movePoint.y,this._scrollAreas.top)?await a.call(this,s,-1):o(this._movePoint.x,this._movePoint.y,this._scrollAreas.bottom)&&await a.call(this,s,1)),requestAnimationFrame(this._updateDragHandler)}export{h as startDrag,u as updateDrag};
