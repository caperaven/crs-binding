import{scrollX as a}from"./scroll.js";import{inArea as o}from"./drag-utils.js";async function u(s,t){const i=await crs.call("dom_interactive","get_animation_layer"),e=await n[t.drag.clone](s,t);return e.style.translate=`${s._bounds.x}px ${s._bounds.y}px`,e.style.filter="drop-shadow(0 0 5px #00000080)",i.appendChild(e),e}class n{static async element(t){return t}static async template(t,i){let e=i.drag.template;e==null&&(e=document.querySelector(`#${t.dataset.template}`));const l=e.content.cloneNode(!0).children[0];return l._bounds=t._bounds,l.dragElement=t,l}}async function d(s){if(this.updateDragHandler==null)return;const t=this.dragElement._bounds.x+(this.movePoint.x-this.startPoint.x),i=this.dragElement._bounds.y+(this.movePoint.y-this.startPoint.y);this.dragElement.style.translate=`${t}px ${i}px`,this.scrollAreas!=null&&(o(this.movePoint.x,this.movePoint.y,this.scrollAreas.left)?await a.call(this,s,-1):o(this.movePoint.x,this.movePoint.y,this.scrollAreas.right)?await a.call(this,s,1):o(this.movePoint.x,this.movePoint.y,this.scrollAreas.top)?await a.call(this,s,-1):o(this.movePoint.x,this.movePoint.y,this.scrollAreas.bottom)&&await a.call(this,s,1)),requestAnimationFrame(this.updateDragHandler)}export{u as startDrag,d as updateDrag};
