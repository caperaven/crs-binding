class o{get size(){return this._size}constructor(t){this._size=0,this._updateCallback=t,this._collection=[]}dispose(){this._updateCallback=null,this._collection=null}fill(t,i){this._collection=[];for(let e=0;e<i;e++)this._collection.push({size:t,dataIndex:e});this._size=t*i,this._updateCallback()}append(t){this._collection.push(...t),this._size+=s(t),this._updateCallback()}update(t,i,e){let c=this._collection[t].size;const a=i-c;this._size=this._size+a,this._collection[t].size=i,this._collection[t].dataIndex=e,this._updateCallback()}insert(t,i,e){this._collection.splice(t,0,{size:i,dataIndex:e}),this._size=this._size+i,this._updateCallback()}move(t,i){let e=this._collection[t];this._collection.splice(t,1),this._collection.splice(i,0,e),this._updateCallback()}remove(t,i){this._size=this._size-this._collection[t].size,this._collection.splice(t,i),this._updateCallback()}recalculate(){return this._size=s(this._collection)}at(t){return this._collection.at(t)}}function s(l){let t=0;return l.forEach(i=>{t=t+i.size}),t}export{o as SizeManager};
