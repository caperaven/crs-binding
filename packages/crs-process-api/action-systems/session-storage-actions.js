class g{static async perform(s,e,a,t){await this[s.action]?.(s,e,a,t)}static async set_value(s,e,a,t){const r=await crs.process.getValue(s.args.key,e,a,t),c=await crs.process.getValue(s.args.value,e,a,t);sessionStorage.setItem(r,c)}static async get_value(s,e,a,t){const r=await crs.process.getValue(s.args.key,e,a,t),c=sessionStorage.getItem(r);return s.args.target!=null&&await crs.process.setValue(s.args.target,c),c}static async set_object(s,e,a,t){const r=await crs.process.getValue(s.args.key,e,a,t),c=await crs.process.getValue(s.args.value,e,a,t),o=JSON.stringify(c);sessionStorage.setItem(r,o)}static async get_object(s,e,a,t){const r=await crs.process.getValue(s.args.key,e,a,t),c=sessionStorage.getItem(r),o=JSON.parse(c);return s.args.target!=null&&await crs.process.setValue(s.args.target,o),o}static async remove(s,e,a,t){const r=await crs.process.getValue(s.args.key,e,a,t);sessionStorage.removeItem(r)}}crs.intent.session_storage=g;export{g as SessionStorageAction};
