class d{static async perform(t,a,r,n){await this[t.action]?.(t,a,r,n)}static async get_days(t,a,r,n){const s=await crs.process.getValue(t.args.month,a,r,n),c=await crs.process.getValue(t.args.year,a,r,n),i=await crs.process.getValue(t.args.only_current,a,r,n),o=new Date(c,s,1),D=o.getMonth();let l=[],g,e,u;i===!0?(e=o,g=new Date(c,s+1,0).getDate()):(e=new Date(c,s,-o.getDay()+1),g=42);for(let y=0;y<g;y++){const h=e.toLocaleString("en-us",{weekday:"short"});i===!1&&D!==e.getMonth()?u=!1:u=!0;const w={number:e.getDate(),current:u,day:h,date:new Date(e.getTime())};l.push(w),e.setDate(e.getDate()+1)}return t.args.target!=null&&await crs.process.setValue(t.args.table,l,a,r,n),l}}crs.intent.date=d;export{d as DateActions};
