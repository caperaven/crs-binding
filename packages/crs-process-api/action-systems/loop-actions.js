const m=500;class h{static async perform(s,r,a){const t=await crs.process.getValue(s.args.source,r,a);if(t==null)throw new Error(`object on path ${s.args.source} was not set`);const n=Object.keys(s.args.steps),c=s.args.target;if(t.length<=500)await w(s,n,t,c,r,a,0,t.length);else for(let o=0;o<t.length;o+=500){const l=o;let e=o+500;e>t.length&&(e=t.length);let i=new Promise(u=>{let f=setTimeout(async()=>{await w(s,n,t,c,r,a,l,e),clearTimeout(f),f=null,u()},0)});await i,i=null}}}async function w(g,s,r,a,t,n,c,o){for(let l=c;l<o;l++){const e=r[l];a!=null&&await crs.process.setValue(a,e,t,n,e);for(let i of s){const u=g.args.steps[i];await crs.process.runStep(u,t,n,e)}}}crs.intent.loop=h;export{h as LoopActions};
