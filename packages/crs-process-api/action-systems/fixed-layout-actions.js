class f{static async perform(n,t,e,a){await this[n.action]?.(n,t,e,a)}static async show_element_relative_to(n,t,e,a){const s=await crs.dom.get_element(n.args.element,t,e,a),o=await crs.dom.get_element(n.args.target,t,e,a),l=await crs.process.getValue(n.args.location,t,e,a),g=await crs.process.getValue(n.args.padding,t,e,a)||0,c=await crs.process.getValue(n.args.screen_padding,t,e,a)||0;switch(l){case"left":await crs.call("fixed_layout","place_left",n.args,t,e,a);break;case"right":await crs.call("fixed_layout","place_right",n.args,t,e,a);break;case"top":await crs.call("fixed_layout","place_top",n.args,t,e,a);break;case"bottom":await crs.call("fixed_layout","place_bottom",n.args,t,e,a);break}await crs.call("fixed_layout","ensure_on_screen",{element:s},t,e,a)}static async set_fixed_position(n,t,e,a){const s=await crs.dom.get_element(n.args.element,t,e,a),o=await crs.dom.get_element(n.args.left,t,e,a),l=await crs.dom.get_element(n.args.top,t,e,a);u(s,o,l),await crs.call("fixed_layout","ensure_on_screen",n,t,e,a)}static async place_left(n,t,e,a){const s=await crs.dom.get_element(n.args.element,t,e,a),o=await crs.dom.get_element(n.args.target,t,e,a),l=await crs.call("dom","get_element_bounds",{element:o},t,e,a),g=await crs.call("dom","get_element_bounds",{element:s},t,e,a),c=await crs.process.getValue(n.args.padding||0,t,e,a),r=getComputedStyle(o),d=getComputedStyle(s),m=l.left-g.width-c-i(r.marginLeft)-i(d.marginRight),_=l.top;await u(s,m,_)}static async place_right(n,t,e,a){const s=await crs.dom.get_element(n.args.element,t,e,a),o=await crs.dom.get_element(n.args.target,t,e,a),l=await crs.call("dom","get_element_bounds",{element:o},t,e,a),g=await crs.call("dom","get_element_bounds",{element:s},t,e,a),c=await crs.process.getValue(n.args.padding||0,t,e,a),r=getComputedStyle(o),d=getComputedStyle(s),m=l.left+l.width+c+i(r.marginRight)+i(d.marginLeft),_=l.top;await u(s,m,_)}static async place_top(n,t,e,a){const s=await crs.dom.get_element(n.args.element,t,e,a),o=await crs.dom.get_element(n.args.target,t,e,a),l=await crs.call("dom","get_element_bounds",{element:o},t,e,a),g=await crs.call("dom","get_element_bounds",{element:s},t,e,a),c=await crs.process.getValue(n.args.padding||0,t,e,a),r=getComputedStyle(o),d=getComputedStyle(s),m=l.left,_=l.top-g.height-c-i(r.marginTop)-i(d.marginBottom);await u(s,m,_)}static async place_bottom(n,t,e,a){const s=await crs.dom.get_element(n.args.element,t,e,a),o=await crs.dom.get_element(n.args.target,t,e,a),l=await crs.call("dom","get_element_bounds",{element:o},t,e,a),g=await crs.call("dom","get_element_bounds",{element:s},t,e,a),c=await crs.process.getValue(n.args.padding||0,t,e,a),r=getComputedStyle(o),d=getComputedStyle(s),m=l.left,_=l.top+l.height+c+i(r.marginBottom)+i(d.marginTop);await u(s,m,_)}static async ensure_on_screen(n,t,e,a){const s=await crs.dom.get_element(n.args.element,t,e,a),o=await crs.call("dom","get_element_bounds",{element:s},t,e,a),l={left:o.left,right:o.right,top:o.top,bottom:o.bottom,width:o.width,height:o.height},g=await crs.call("dom","get_element_bounds",{element:document.body},t,e,a);l.left<0&&(l.left=screenPadding),l.left+l.width>g.left+g.width&&(l.left=g.left+g.width-l.width-screenPadding),l.top<0&&(l.top=screenPadding),l.top+l.height>g.top+g.height&&(l.top=g.top+g.height-l.height-screenPadding),await u(s,l.left,l.top)}}function u(w,n,t){w.style.position="fixed",w.style.left=`${n}px`,w.style.top=`${t}px`}function i(w){return Number(w.replace("px",""))}crs.intent.fixed_layout=f;export{f as FixedLayoutActions};
