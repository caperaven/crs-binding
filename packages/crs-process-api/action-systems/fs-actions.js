class f{static async perform(t,e,a,s){await this[t.action](t,e,a,s)}static async select_folder(t,e,a,s){}static async create_folder(t,e,a,s){}static async select_file(t,e,a,s){let i;return[i]=await window.showOpenFilePicker(),i}static async read_file(t,e,a,s){return await(await(await crs.process.getValue(t.args?.handle,e,a,s)||await this.select_file(t,e,a,s)).getFile()).text()}static async read_json(t,e,a,s){const i=await this.read_file(t,e,a,s);return JSON.parse(i)}static async save_file(t,e,a,s){const i=await crs.process.getValue(t.args.file_handle,e,a,s),n=await crs.process.getValue(t.args.content,e,a,s);await l(i,n)}static async write_new_file(t,e,a,s){const i=await crs.process.getValue(t.args.file_types,e,a,s),n=await crs.process.getValue(t.args.default_name,e,a,s),r=await w(i,n),o=await crs.process.getValue(t.args.content,e,a,s);await l(r,o)}static async write_new_json(t,e,a,s){const i=await crs.process.getValue(t.args.content,e,a,s),o=await w([{description:"JSON Files",accept:{"text/json":[".json"]}}],"untitled.json");await l(o,JSON.stringify(i,null,"	"))}static async open_folder(t,e,a,s){const n=await crs.process.getValue(t.args?.handle,e,a,s)||await window.showDirectoryPicker();await d(n,!0);const r=[];for await(const o of n.values())r.push(o);return r}}async function l(c,t){const e=await c.createWritable();await e.write(t),await e.close()}async function w(c,t){const e={suggestedName:t||"Untitled.txt",types:c||[]};return await window.showSaveFilePicker(e)}async function d(c,t){const e={};return t&&(e.mode="readwrite"),await c.queryPermission(e)==="granted"||await c.requestPermission(e)==="granted"}crs.intent.fs=f;export{f as FsActions};
